#!/usr/bin/env node

/*
 * Expediente CLI
 */

var program = require('commander');
var pkg = require('../package.json');
var lib = require('../lib');
var defaults = require('../conf');
var expediente = require('../');
var defaultConfig = require('pwuid')().dir + '/.expedienteconfig.json';
var log = console.log;
var config = {};
var configDir;
var userConfig;

// Arguments
program
  .version(pkg.version)
  .usage('<HH:mm> [options]')
  .option('-h, --hours <HH:mm>', 'hours [HH:mm]')
  .option('-t, --tolerance <HH:mm>', 'tolerance [HH:mm]')
  .option('-c, --config <file>', 'choose config file')
  .option('-D, --detailed', 'detailed result');

// Help
program.on('--help', function () {
  log('  Config:');
  log('');
  log('    If the file ~/.expedienteconfig.json exists, expediente will ');
  log('    use it\'s contents as settings for default expedient duration');
  log('    or tolerance time. Any parameter will override the file config');
  log('');
  log('    See https://github.com/guilhermehn/expediente/blob/master/README.md');
  log('    for example config.');
  log('');
});

program.parse(process.argv);

// Set config load
configDir = program.config || defaultConfig;

userConfig = lib.loadConfig(configDir);

if (userConfig) {
  Object
    .keys(defaults)
    .forEach(function (key) {
      config[key] = (userConfig.hasOwnProperty(key) ? userConfig : defaults)[key];
    });
}
else {
  config = defaults;
}

// Show help text if the default
// argument is not present
if (!program.args.length) {
  program.help();
}

config.start = program.args[0];

if (program.hours) {
  config.hours = program.hours;
}

if (program.tolerance) {
  config.tolerance = program.tolerance;
}

if (program.detailed) {
  config.detailed = program.detailed;
  log = lib.logDetailed;
}

var result = expediente(config);

if (result === null) {
  console.log('\n  Invalid argument');
  program.help();
}

log(result);
